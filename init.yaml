orchestration: kubernetes
secrets:
  ### Generated secrets (do not edit)
  - name: s3-secret-key
    namespace: "openfaas-fn"
    literals:
      - name: s3-secret-key
  - name: s3-access-key
    literals:
      - name: s3-access-key
    namespace:  "openfaas-fn"
  - name: basic-auth
    literals:
      - name: basic-auth-user
        value: admin
      - name: basic-auth-password
        value: ""
    namespace:  "openfaas"
  - name: "payload-secret"
    literals:
      - name: payload-secret
        value: ""
    namespace: "openfaas"
  - name: "jwt-private-key"
    files:
      - name: "key"
        value_from: "./tmp/key"
        value_command: "openssl ecparam -genkey -name prime256v1 -noout -out ./tmp/key"
    namespace: "openfaas"
  - name: "jwt-public-key"
    files:
      - name: "key.pub"
        value_from: "./tmp/key.pub"
        value_command: "openssl ec -in ./tmp/key -pubout -out ./tmp/key.pub"
    namespace: "openfaas"

  ### User-input
  ### In this section, you must populate all your secretsÂ or secret file-locations
  ### and your desired configuration.
  ### For more information see: https://github.com/openfaas/openfaas-cloud/tree/master/docs

  # Value you entered into the GitHub App UI, or generate random password if left blank
  - name: "github-webhook-secret"
    literals:
      - name: "github-webhook-secret"
        value: ""
    namespace: "openfaas-fn"

  # Download from GitHub App on GitHub UI
  - name: "private-key"
    files:
      - name: "private-key"
        value_from: "~/Downloads/private-key.pem"
    namespace: "openfaas-fn"

  # Populate your OAuth client_secret
  - name: "of-client-secret"
    literals:
      - name: of-client-secret
        value: "PASTE_SECRET_KEY_HERE"
    namespace: "openfaas"

  # DNS Service Account secret

  ## Use Google Cloud DNS
  - name: "clouddns-service-account"
    files:
      - name: "service-account.json"
        value_from: "~/Downloads/service-account.json"
    namespace: "kube-system"

  ## Use DigitalOcean
  - name: "digitalocean-dns"
    files:
      - name: "access-token"
        value_from: "~/Downloads/do-access-token"
    namespace: "cert-manager"

  ## or Use Route 53
  # - name: "route53-credentials-secret"
  #   files:
  #     - name: "secret-access-key"
  #       value_from: "~/Downloads/route53-secret-access-key"
  #   namespace: "kube-system"


### Docker registry
#### This can be any cluster accessible by your cluster. To populate the file
#### run `docker login` with "store in keychain" turned off in Docker Desktop.
  - name: "registry-secret"
    files:
      - name: "config.json"
        value_from: "~/.docker/config.json"
    namespace: "openfaas"

#### Acount or registry and user for your cluster's Docker images for functions
registry: docker.io/ofctest/

### Your root DNS domain name, this can be a sub-domain i.e. staging.o6s.io / prod.o6s.io
root_domain: "myfaas.club"

## Populate from GitHub App
github:
  app_id: "22586"

## Populate from OAuth App
oauth:
  client_id: 914f3fb036ce9cd774

## Slack
### You can set your own url to get an audit trail in your Slack workspace
slack:
  url: http://gateway.openfaas:8080/function/echo

### Users allowed to access your OpenFaaS Cloud
#### ACL for your users, it must be a raw text file or GitHub RAW URL
customers_url: "https://raw.githubusercontent.com/openfaas/openfaas-cloud/master/CUSTOMERS"

##  S3 configuration
### Build logs from buildkit are stored in S3
### Defaults to in-cluster deployment of Minio. AWS S3 is also possible
s3:
  s3_url: cloud-minio.openfaas.svc.cluster.local:9000
  s3_region: us-east-1
  s3_tls: false
  s3_bucket: pipeline

## Enable auth:
### When enabled users must log in with a valid GitHub account and be present in the
### customers file to view any dashboard
enable_oauth: false

## TLS
### When enabled cert-manager will be used to provision wildcard TLS certificates for
### your OpenFaaS Cloud.
tls: true
tls_config:
#  email: "user@domain"


  # issuer_type: "prod"
  issuer_type: "staging"

  ## Select DNS web service between Amazon Route 53 (route53) and Google Cloud DNS (clouddns)
  # by uncommenting the required option

  ### Google Cloud DNS
  # dns_service: clouddns
  # project_id: "my-openfaas-cloud"

  ### AWS Route53
  # dns_service: route53
  # region: us-east-1
  # access_key_id: ASYAKIUJE8AYRQQ7DU3M

  ### DigitalOcean
  dns_service: digitalocean
