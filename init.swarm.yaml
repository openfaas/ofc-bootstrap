orchestration: swarm
swarm-secrets:
  ### Generated secrets (do not edit)
  - name: s3-secret-key
    value: ""

  - name: s3-access-key
    value: ""

  - name: basic-auth-user
    value: admin

  - name: basic-auth-password
    value: ""

  - name: "payload-secret"
    value: ""

  - name: "jwt-private-key"
    file:
      value_from: "./tmp/key"
      value_command: "openssl ecparam -genkey -name prime256v1 -noout -out ./tmp/key"

  - name: "jwt-public-key"
    file:
      value_from: "./tmp/key.pub"
      value_command: "openssl ec -in ./tmp/key -pubout -out ./tmp/key.pub"

  ### User-input
  ### In this section, you must populate all your secretsÂ or secret file-locations
  ### and your desired configuration.
  ### For more information see: https://github.com/openfaas/openfaas-cloud/tree/master/docs

  # Value you entered into the GitHub App UI, or generate random password if left blank
  - name: "github-webhook-secret"
    value: "secret"

  # Download from GitHub App on GitHub UI
  - name: "private-key"
    file:
      value_from: "~/Downloads/private-key.pem"

  # Populate your OAuth client_secret
  - name: of-client-secret
    value: "79163355e553b477957d977b0b8addd3c42ff52d"

### User input
  - name: "registry-secret"
    file:
      value_from: "~/.docker/config.json"


#### Acount or registry and user for your cluster's Docker images for functions
registry: docker.io/ofctest/

### Your root DNS domain name, this can be a sub-domain i.e. staging.o6s.io / prod.o6s.io
root_domain: "myfaas.club"

## Populate from GitHub App
github:
  app_id: "24304"

## Populate from OAuth App
oauth:
  client_id: 08b72bd8e9e653084264
## Slack
### You can set your own url to get an audit trail in your Slack workspace
slack:
  url: http://gateway.openfaas:8080/function/echo

### Users allowed to access your OpenFaaS Cloud
customers_url: "https://raw.githubusercontent.com/openfaas/openfaas-cloud/master/CUSTOMERS"

##  S3 configuration
### Build logs from buildkit are stored in S3
### Defaults to in-cluster deployment of Minio. AWS S3 is also possible
s3:
  s3_url: minio:9000
  s3_region: us-east-1
  s3_tls: false
  s3_bucket: pipeline

## Enable auth:
### When enabled users must log in with a valid GitHub account and be present in the
### customers file to view any dashboard
enable_oauth: true

## TLS
# tls: false
# tls_config:
#   issuer_type: "prod"

#   # issuer_type: "staging"
#   email: "alexellis2@gmail.com"

#   ### DigitalOcean
#   dns_service: digitalocean
